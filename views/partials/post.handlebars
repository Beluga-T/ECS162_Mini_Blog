{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
        <img src="{{#if avatar_url}}{{avatar_url}}{{else}}/avatar/{{username}}{{/if}}" alt="Avatar of {{username}}"
            class="post-avatar_img">


    </div>
    <div class="post-content">
        <h3>{{title}}</h3>
        <p class="post__text">{{content}}</p>
    </div>
</div>
<div class="post-content preserve-newlines">
    <!-- the post -->
    <div class="post-status-bar">
        <!-- everything that is shown in the status bar -->
        <!-- Heart = â™¥ -->
        <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
        <div class="post__information">
            <span class="like-num" data-id="{{id}}">{{likes}} <i class="fas fa-thumbs-up post__likes"></i></span>
            <span>Posted by {{username}} on <span class="post-timestamp" data-timestamp="{{timestamp}}"></span></span>
        </div>
       {{#ifCond username user.username}} <!-- if the post is made by the user -->
        <button class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)">
            <i class="fas fa-trash-alt"></i> Delete
        </button>
        {{else}}
        {{#if user}}
        <button class="like-button" data-id="{{id}}" onclick="handleLikeClick(event)">
            <i class="fas fa-thumbs-up"></i> Like
        </button>
        {{/if}}
        {{/ifCond}}

        <!-- Debugging information -->
        {{!-- <span>Debug - Current User: {{user.username}}</span>
        <span>Debug - Post User: {{username}}</span> --}}
    </div>
</div>
</div>
<script>

    function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');
        console.log('Like button clicked for post:', postId);
        const likeSpan = document.querySelector(`.like-num[data-id="${postId}"]`);
        console.log('Like span:', likeSpan);
        // you might want to "fetch" something...    
        //fetch(`/like/${postId}`, {
        //    method: 'POST',
        //})
        //   .then(response => response.json())
        //   .then(data => {
        //       if (data.success) {
        // Reload the page or update the UI to show the new like count
        //          likeSpan.innerHTML = `${data.likes}` + ' <i class="fas fa-thumbs-up post__likes"></i>';
        //      }
        //  })
        //  .catch(error => {
        //       console.error('Error liking the post:', error);
        //  });
        // use database version
        fetch(`/like/${postId}`, {
            method: 'POST',
        })
            .then(response => response.json()

            )
            .then(data => {
                if (data.success) {

                    likeSpan.innerHTML = `${data.likes} <i class="fas fa-thumbs-up post__likes"></i>`;
                }
            })
            .catch(error => {
                console.error('Error liking the post:', error);
            });
    }

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');

        // you might want to "fetch" something...        
        fetch(`/delete/${postId}`, {
            method: 'POST',
        })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                }
            })
            .catch(error => {
                console.error('Error deleting the post:', error);
            });
    }
    // Function to format the timestamp
    function formatTimestamp(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleString();
    }

    // Format all timestamps on the page
    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".post-timestamp").forEach(element => {
            element.textContent = formatTimestamp(element.dataset.timestamp);
        });
    });
</script>