{{! Use the main layout }}
{{!< main }}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://unpkg.com/papercss@1.9.2/dist/paper.css" rel="stylesheet" />
    <link href="/css/style.css" rel="stylesheet">
    <title>Game - Gamer Forum</title>
    <style>
        .post:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 6px rgba(27, 31, 35, 0.15);
        }
    </style>
</head>
<body>
    <main class="flex-1 p-8 flex flex-col items-center">
        <section class="content-container">
            {{#if loggedIn}}
            <section class="post-form">
                <h2 class="main__heading">Create New Post</h2>
                <form action="/posts" method="POST">
                    <label for="title">Title</label>
                    <input type="text" id="title" name="title" required>
                    <label for="content">Content</label>
                    <textarea id="content" name="content" rows="4" required></textarea>
                    <input type="hidden" id="game" name="game" value="{{game}}">
                    <div class="form-actions">
                        <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                        <button type="submit" class="post-button">Post</button>
                    </div>
                </form>
                <div id="emoji-container" class="emoji-panel" style="display: none;">
                    <input type="text" id="emoji-search" oninput="searchEmojis()" placeholder="Search emojis...">
                    <div id="emoji-grid"></div>
                </div>
            </section>
            {{/if}}
            <section class="post-list">
                <div class="game-title">
                    <img src="images/{{game}}.png" alt="" class="game-logo">
                    <h2 class="main__heading">{{game}} Posts</h2>
                </div>
                <form action="/" method="get" class="filter-wrapper" id="filterForm">
                    <select id="filter" name="filterOption" defaultValue="default">
                        <option value="default" selected disabled>Sort</option>
                        <option value="likes">Likes</option>
                        <option value="new">New</option>
                        <option value="old">Old</option>
                    </select>
                </form>
                {{#if posts.length}}
                <ul class="card-list">
                    {{#each posts}}
                    <li class="post">
                        {{> post this user=../user}}
                    </li>
                    {{/each}}
                </ul>
                {{else}}
                <p>No posts available.</p>
                {{/if}}
            </section>
        </section>
    </main>

    <script>
        const accessToken = '{{temp}}';
        let allEmojis = [];
        const apiKey = accessToken;

        function toggleEmojiPanel() {
            const container = document.getElementById('emoji-container');
            container.style.display = container.style.display === 'none' ? 'block' : 'none';

            if (container.style.display === 'block' && allEmojis.length == 0) {
                fetch(`https://emoji-api.com/emojis?access_key=${apiKey}`)
                    .then(response => response.json())
                    .then(data => {
                        allEmojis = data;
                        displayEmojis(allEmojis);
                    })
                    .catch(error => {
                        console.error('Error fetching emojis:', error);
                    });
            }
        }

        function displayEmojis(emojis, limit = 200) {
            const container = document.getElementById('emoji-grid');
            container.innerHTML = '';
            if (Array.isArray(emojis) && emojis.length > 0) {
                emojis.slice(0, limit).forEach(emoji => {
                    const emojiElement = document.createElement('span');
                    emojiElement.textContent = emoji.character;
                    emojiElement.title = emoji.slug;
                    emojiElement.style.cursor = 'pointer';
                    emojiElement.onclick = () => insertEmoji(emoji.character);
                    container.appendChild(emojiElement);
                });
            } else {
                container.textContent = 'No emojis found. Try a different search!';
            }
        }

        function searchEmojis() {
            const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
            const filteredEmojis = allEmojis.filter(emoji => emoji.unicodeName.toLowerCase().includes(searchTerm));
            displayEmojis(filteredEmojis);
        }

        function formatTimestamp(timestamp) {
            const date = new Date(timestamp);
            return date.toLocaleString();
        }

        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll(".post-timestamp").forEach(element => {
                element.textContent = formatTimestamp(element.dataset.timestamp);
            });
        });

        function insertEmoji(emoji) {
            const textarea = document.getElementById('content');
            const start = textarea.selectionStart;
            const end = textarea.selectionEnd;
            const text = textarea.value;
            const before = text.substring(0, start);
            const after = text.substring(end, text.length);

            textarea.value = before + emoji + after;
            textarea.selectionStart = textarea.selectionEnd = start + emoji.length;
            textarea.focus();
        }

        document.getElementById('filter').addEventListener('change', function() {
            document.getElementById('filterForm').submit();
        });
    </script>
</body>
</html>
